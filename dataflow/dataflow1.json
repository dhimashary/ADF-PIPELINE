{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sourceUserdataParquet",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "sourceUserdata2Parquet",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "destinationUserdataParquet",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "idEven"
				},
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     country as string (\"China\")",
				"}",
				"source(output(",
				"          registration_dttm as timestamp,",
				"          id as integer,",
				"          first_name as string,",
				"          last_name as string,",
				"          email as string,",
				"          gender as string,",
				"          ip_address as string,",
				"          cc as string,",
				"          country as string,",
				"          birthdate as string,",
				"          salary as double,",
				"          title as string,",
				"          comments as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> source1",
				"source(output(",
				"          registration_dttm as timestamp,",
				"          id as integer,",
				"          first_name as string,",
				"          last_name as string,",
				"          email as string,",
				"          gender as string,",
				"          ip_address as string,",
				"          cc as string,",
				"          country as string,",
				"          birthdate as string,",
				"          salary as double,",
				"          title as string,",
				"          comments as string,",
				"          column1 as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> source2",
				"join1 filter(equals(source1@country, \"Indonesia\")) ~> filter1",
				"filter1 derive(id_even = equals(mod(source1@id, 2),0)) ~> idEven",
				"source1, source2 join(source1@first_name == source2@first_name,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"idEven sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}